{"version":3,"file":"index.cjs","sources":["../src/helpers/QuestionSDK.ts","../src/helpers/DTFunctions.ts"],"sourcesContent":["import { Question } from \"../types/Question\";\r\n\r\nclass QuestionSDK {\r\n  constructor() {}\r\n\r\n  createQuestion(id: string, question: string) {\r\n    let obj = {\r\n      id: id,\r\n      description: question,\r\n    } as Question;\r\n    return obj;\r\n  }\r\n}\r\nexport default QuestionSDK;\r\n","class DTFunctions {\r\n\r\n\r\n // A boilerplate function to perform a series of operations\r\n async performOperations(\r\n  oauth_client_id: string,\r\n  oauth_client_secret: string,\r\n  dt_account_urn: string,\r\n  oauth_sso_endpoint: string,\r\n  dt_platform_environment: string,\r\n  documentType: string,\r\n  documentName: string,\r\n  validationId: string,\r\n  maxScore: number,\r\n  getScore: (auditInfo: any) => Promise<{ score: number, assertion_fails: any[] }>\r\n): Promise<{ validationId: string, maxScore: number, finalScore: number, auditInfo: any }> {\r\n  // Get the authorization header\r\n  let oauth_header = null;\r\n  const dt_access_token = await this.getOauthAccessToken(oauth_client_id, oauth_client_secret, dt_account_urn, oauth_sso_endpoint);\r\n  if (!dt_access_token) {\r\n    throw new Error(\"Failed to obtain access token\");\r\n  }\r\n  oauth_header = await this.getAuthorizationHeader(dt_access_token);\r\n\r\n  // Get documents list\r\n  const documentsList = await this.getDocumentsList(dt_platform_environment, documentType, documentName, oauth_header);\r\n\r\n  // Get document details\r\n  const documentDetails = await this.getDocumentDetails(dt_platform_environment, documentsList, oauth_header);\r\n\r\n  // Generate Audit Info\r\n  const auditInfo = await this.generateAuditInfo(documentsList, documentDetails);\r\n    // Get the score\r\n    const { score: finalScore, assertion_fails: assertionFails } = await getScore(auditInfo);\r\n    auditInfo.assertionFails = assertionFails;\r\n    console.log(\"auditInfo assertion fails:\\n\" + JSON.stringify(auditInfo.assertionFails, null, 2));\r\n\r\n    return {\r\n      validationId: validationId,\r\n      maxScore: maxScore,\r\n      finalScore: finalScore,\r\n      auditInfo: auditInfo\r\n    };\r\n  }\r\n\r\n  // A utility function to get the OAuth access token\r\n  async getOauthAccessToken(\r\n    oauth_client_id: string,\r\n    oauth_client_secret: string,\r\n    dt_account_urn: string,\r\n    oauth_sso_endpoint: string\r\n  ): Promise<string | undefined> {\r\n    const myHeaders = new Headers();\r\n    myHeaders.append(\"Content-Type\", \"application/x-www-form-urlencoded\");\r\n\r\n    const urlencoded = new URLSearchParams();\r\n    urlencoded.append(\"grant_type\", \"client_credentials\");\r\n    urlencoded.append(\"client_id\", oauth_client_id);\r\n    urlencoded.append(\"client_secret\", oauth_client_secret);\r\n    urlencoded.append(\"scope\", \"document:documents:read document:documents:write document:environment-shares:read document:direct-shares:read \");\r\n    urlencoded.append(\"resource\", dt_account_urn);\r\n\r\n    const requestOptions: RequestInit = {\r\n      method: \"POST\",\r\n      headers: myHeaders,\r\n      body: urlencoded,\r\n      redirect: \"follow\"\r\n    };\r\n\r\n    try {\r\n      const response = await fetch(oauth_sso_endpoint, requestOptions);\r\n      const result = await response.json();\r\n      return result.access_token;\r\n    } catch (error: any) {\r\n      let errorDetails;\r\n      if (error.response) {\r\n        errorDetails = await error.response.text();\r\n        console.error(\"oAuth Access Token Error:\", error.response.status, errorDetails);\r\n      } else {\r\n        console.error(\"oAuth Access Token Error:\", error.message);\r\n      }\r\n    }\r\n  }\r\n\r\n  // A utility function to get the authorization header\r\n    async getAuthorizationHeader(token: string): Promise<Headers> {\r\n      // Create the headers object\r\n      const headers = new Headers();\r\n      // Add the authorization header\r\n      headers.append(\"Authorization\", \"Bearer \" + token);\r\n      return headers;\r\n    }\r\n  \r\n    // A utility function to get the entities list\r\n    async getEntities(environment: string, entity_type: string, entity_name_to_query: string, headers: Headers): Promise<any> {\r\n      // Get the application with the specified name\r\n      const entitySelector = `type(${entity_type}),entityName.contains(${entity_name_to_query})`;\r\n      // Create the request object\r\n      const request = new Request(`${environment}/api/v2/entities?entitySelector=${entitySelector}`, {\r\n        method: \"GET\",\r\n        headers: headers,\r\n      });\r\n  \r\n      let entities = null;\r\n      try {\r\n        const response = await fetch(request);\r\n        if (response.ok) {\r\n          entities = await response.json();\r\n        } else {\r\n          const errorDetails = await response.text();\r\n          console.error(\"Entity ID Error:\", response.status, errorDetails);\r\n        }\r\n      } catch (error) {\r\n        console.error(error);\r\n      }\r\n  \r\n      return entities;\r\n    }\r\n  \r\n    // A utility function to get the entities data\r\n    async getEntitiesData(environment: string, entitiesList: any, headers: Headers): Promise<any[]> {\r\n      if (entitiesList === null) {\r\n        return [];\r\n      }\r\n  \r\n      let entitiesData: any[] = [];\r\n      for (const entity of entitiesList.entities) {\r\n        const entityId = entity.entityId;\r\n        const request = new Request(`${environment}/api/v2/entities/${entityId}`, {\r\n          method: \"GET\",\r\n          headers: headers,\r\n        });\r\n  \r\n        try {\r\n          const response = await fetch(request);\r\n          if (response.ok) {\r\n            const data = await response.json();\r\n            entitiesData.push(data);\r\n          } else {\r\n            const errorDetails = await response.text();\r\n            console.error(\"Entity Details Error:\", response.status, errorDetails);\r\n          }\r\n        } catch (error) {\r\n          console.error(error);\r\n        }\r\n      }\r\n  \r\n      return entitiesData;\r\n    }\r\n\r\n  // A utility function to get the documents list\r\n  async getDocumentsList(environment: string, document_type: string, document_name_to_query: string, headers: Headers): Promise<any> {\r\n    const documentFilter = `name contains '${document_name_to_query}' and type == '${document_type}'`;\r\n    const request = new Request(`${environment}/platform/document/v1/documents?filter=${encodeURIComponent(documentFilter)}`, {\r\n      method: \"GET\",\r\n      headers: headers,\r\n    });\r\n\r\n    let documents = null;\r\n    try {\r\n      const response = await fetch(request);\r\n      if (response.ok) {\r\n        documents = await response.json();\r\n      } else {\r\n        const errorDetails = await response.text();\r\n        console.error(\"Document List Error:\", response.status, errorDetails);\r\n      }\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n\r\n    return documents;\r\n  }    \r\n\r\n    // A utility function to get the document details\r\n    async getDocumentDetails(environment: string, documentsList: any, headers: Headers): Promise<any[]> {\r\n      if (documentsList === null) {\r\n        return [];\r\n      }\r\n  \r\n      let documentDetails: any[] = [];\r\n      const requestOptions: RequestInit = {\r\n        method: \"GET\",\r\n        headers: headers,\r\n      };\r\n  \r\n      for (const document of documentsList.documents) {\r\n        const documentId = String(document.id);\r\n        try {\r\n          const response = await fetch(`${environment}/platform/document/v1/documents/${documentId}/content`, requestOptions);\r\n          if (response.ok) {\r\n            const result = await response.json();\r\n            documentDetails.push(result);\r\n          } else {\r\n            const errorDetails = await response.text();\r\n            console.error(\"Document Details Error:\", response.status, errorDetails);\r\n          }\r\n        } catch (error) {\r\n          console.error(error);\r\n        }\r\n      }\r\n  \r\n      return documentDetails;\r\n    }\r\n\r\n   // A utility function to generate audit info\r\n  async generateAuditInfo(documentList: any, documentDetails: any): Promise<any> {\r\n    let audit_info: any = {};\r\n\r\n    if (documentList != null) {\r\n      audit_info[\"documentList\"] = documentList;\r\n    }\r\n\r\n    if (documentDetails != null) {\r\n      audit_info[\"documentDetails\"] = documentDetails;\r\n    }\r\n\r\n    audit_info.assertionFails = [];\r\n\r\n    return audit_info;\r\n  }   \r\n\r\n\r\n    checkKeywordsExistence(inputValue: string, keywords: string[]): boolean {\r\n      return keywords.every(keyword => inputValue.toLowerCase().includes(keyword.toLowerCase()));\r\n    }\r\n\r\n}\r\n\r\n  export default DTFunctions;"],"names":["QuestionSDK","prototype","createQuestion","id","question","description","DTFunctions","_proto","performOperations","oauth_client_id","oauth_client_secret","dt_account_urn","oauth_sso_endpoint","dt_platform_environment","documentType","documentName","validationId","maxScore","getScore","_this","this","oauth_header","Promise","resolve","getOauthAccessToken","then","dt_access_token","Error","getAuthorizationHeader","_this$getAuthorizatio","getDocumentsList","documentsList","getDocumentDetails","documentDetails","generateAuditInfo","auditInfo","_ref","finalScore","score","assertionFails","assertion_fails","console","log","JSON","stringify","e","reject","myHeaders","Headers","append","urlencoded","URLSearchParams","requestOptions","method","headers","body","redirect","_catch","fetch","response","json","result","access_token","error","_temp","text","_error$response$text","status","message","token","getEntities","environment","entity_type","entity_name_to_query","request","Request","entities","_temp3","_temp2","ok","_response$json","errorDetails","getEntitiesData","entitiesList","entitiesData","_temp6","_forOf","entity","entityId","_temp5","_temp4","data","push","document_type","document_name_to_query","encodeURIComponent","documents","_temp8","_temp7","_response$json2","_temp11","document","documentId","String","_temp10","_temp9","documentList","audit_info","checkKeywordsExistence","inputValue","keywords","every","keyword","toLowerCase","includes","Symbol","iterator","_settle","pact","state","value","s","_Pact","o","bind","v","observer","onFulfilled","onRejected","callback","_isSettledPact","thenable","target","check","_iteratorSymbol","step","_cycle","next","done","array","i","length"],"mappings":"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"}