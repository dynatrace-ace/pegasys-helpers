{"version":3,"file":"index.esm.js","sources":["../src/helpers/QuestionSDK.ts","../src/helpers/DTFunctions.ts"],"sourcesContent":["import { Question } from \"../types/Question\";\r\n\r\nclass QuestionSDK {\r\n  constructor() {}\r\n\r\n  createQuestion(id: string, question: string) {\r\n    let obj = {\r\n      id: id,\r\n      description: question,\r\n    } as Question;\r\n    return obj;\r\n  }\r\n}\r\nexport default QuestionSDK;\r\n","class DTFunctions {\r\n\r\n  // A utility function to get the OAuth access token\r\n  async getOauthAccessToken(\r\n    oauth_client_id: string,\r\n    oauth_client_secret: string,\r\n    dt_account_urn: string,\r\n    oauth_sso_endpoint: string\r\n  ): Promise<string | undefined> {\r\n    const myHeaders = new Headers();\r\n    myHeaders.append(\"Content-Type\", \"application/x-www-form-urlencoded\");\r\n\r\n    const urlencoded = new URLSearchParams();\r\n    urlencoded.append(\"grant_type\", \"client_credentials\");\r\n    urlencoded.append(\"client_id\", oauth_client_id);\r\n    urlencoded.append(\"client_secret\", oauth_client_secret);\r\n    urlencoded.append(\"scope\", \"document:documents:read document:documents:write document:environment-shares:read document:direct-shares:read \");\r\n    urlencoded.append(\"resource\", dt_account_urn);\r\n\r\n    const requestOptions: RequestInit = {\r\n      method: \"POST\",\r\n      headers: myHeaders,\r\n      body: urlencoded,\r\n      redirect: \"follow\"\r\n    };\r\n\r\n    try {\r\n      const response = await fetch(oauth_sso_endpoint, requestOptions);\r\n      const result = await response.json();\r\n      return result.access_token;\r\n    } catch (error: any) {\r\n      let errorDetails;\r\n      if (error.response) {\r\n        errorDetails = await error.response.text();\r\n        console.error(\"oAuth Access Token Error:\", error.response.status, errorDetails);\r\n      } else {\r\n        console.error(\"oAuth Access Token Error:\", error.message);\r\n      }\r\n    }\r\n  }\r\n\r\n  // A utility function to get the authorization header\r\n    async getAuthorizationHeader(token: string): Promise<Headers> {\r\n      // Create the headers object\r\n      const headers = new Headers();\r\n      // Add the authorization header\r\n      headers.append(\"Authorization\", \"Bearer \" + token);\r\n      return headers;\r\n    }\r\n  \r\n    // A utility function to get the entities list\r\n    async getEntities(environment: string, entity_type: string, entity_name_to_query: string, headers: Headers): Promise<any> {\r\n      // Get the application with the specified name\r\n      const entitySelector = `type(${entity_type}),entityName.contains(${entity_name_to_query})`;\r\n      // Create the request object\r\n      const request = new Request(`${environment}/api/v2/entities?entitySelector=${entitySelector}`, {\r\n        method: \"GET\",\r\n        headers: headers,\r\n      });\r\n  \r\n      let entities = null;\r\n      try {\r\n        const response = await fetch(request);\r\n        if (response.ok) {\r\n          entities = await response.json();\r\n        } else {\r\n          const errorDetails = await response.text();\r\n          console.error(\"Entity ID Error:\", response.status, errorDetails);\r\n        }\r\n      } catch (error) {\r\n        console.error(error);\r\n      }\r\n  \r\n      return entities;\r\n    }\r\n  \r\n    // A utility function to get the entities data\r\n    async getEntitiesData(environment: string, entitiesList: any, headers: Headers): Promise<any[]> {\r\n      if (entitiesList === null) {\r\n        return [];\r\n      }\r\n  \r\n      let entitiesData: any[] = [];\r\n      for (const entity of entitiesList.entities) {\r\n        const entityId = entity.entityId;\r\n        const request = new Request(`${environment}/api/v2/entities/${entityId}`, {\r\n          method: \"GET\",\r\n          headers: headers,\r\n        });\r\n  \r\n        try {\r\n          const response = await fetch(request);\r\n          if (response.ok) {\r\n            const data = await response.json();\r\n            entitiesData.push(data);\r\n          } else {\r\n            const errorDetails = await response.text();\r\n            console.error(\"Entity Details Error:\", response.status, errorDetails);\r\n          }\r\n        } catch (error) {\r\n          console.error(error);\r\n        }\r\n      }\r\n  \r\n      return entitiesData;\r\n    }\r\n\r\n  // A utility function to get the documents list\r\n  async getDocumentsList(environment: string, document_type: string, document_name_to_query: string, headers: Headers): Promise<any> {\r\n    const documentFilter = `name contains '${document_name_to_query}' and type == '${document_type}'`;\r\n    const request = new Request(`${environment}/platform/document/v1/documents?filter=${encodeURIComponent(documentFilter)}`, {\r\n      method: \"GET\",\r\n      headers: headers,\r\n    });\r\n\r\n    let documents = null;\r\n    try {\r\n      const response = await fetch(request);\r\n      if (response.ok) {\r\n        documents = await response.json();\r\n      } else {\r\n        const errorDetails = await response.text();\r\n        console.error(\"Document List Error:\", response.status, errorDetails);\r\n      }\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n\r\n    return documents;\r\n  }    \r\n\r\n    // A utility function to get the document details\r\n    async getDocumentDetails(environment: string, documentsList: any, headers: Headers): Promise<any[]> {\r\n      if (documentsList === null) {\r\n        return [];\r\n      }\r\n  \r\n      let documentDetails: any[] = [];\r\n      const requestOptions: RequestInit = {\r\n        method: \"GET\",\r\n        headers: headers,\r\n      };\r\n  \r\n      for (const document of documentsList.documents) {\r\n        const documentId = String(document.id);\r\n        try {\r\n          const response = await fetch(`${environment}/platform/document/v1/documents/${documentId}/content`, requestOptions);\r\n          if (response.ok) {\r\n            const result = await response.json();\r\n            documentDetails.push(result);\r\n          } else {\r\n            const errorDetails = await response.text();\r\n            console.error(\"Document Details Error:\", response.status, errorDetails);\r\n          }\r\n        } catch (error) {\r\n          console.error(error);\r\n        }\r\n      }\r\n  \r\n      return documentDetails;\r\n    }\r\n\r\n   // A utility function to generate audit info\r\n  async generateAuditInfo(documentList: any, documentDetails: any): Promise<any> {\r\n    let audit_info: any = {};\r\n\r\n    if (documentList != null) {\r\n      audit_info[\"documentList\"] = documentList;\r\n    }\r\n\r\n    if (documentDetails != null) {\r\n      audit_info[\"documentDetails\"] = documentDetails;\r\n    }\r\n\r\n    audit_info.assertionFails = [];\r\n\r\n    return audit_info;\r\n  }   \r\n\r\n\r\n    checkKeywordsExistence(inputValue: string, keywords: string[]): boolean {\r\n      return keywords.every(keyword => inputValue.toLowerCase().includes(keyword.toLowerCase()));\r\n    }\r\n\r\n}\r\n\r\n  export default DTFunctions;"],"names":["QuestionSDK","prototype","createQuestion","id","question","description","DTFunctions","_proto","getOauthAccessToken","oauth_client_id","oauth_client_secret","dt_account_urn","oauth_sso_endpoint","myHeaders","Headers","append","urlencoded","URLSearchParams","requestOptions","method","headers","body","redirect","Promise","resolve","_catch","fetch","then","response","json","result","access_token","error","_temp","text","_error$response$text","console","status","message","e","reject","getAuthorizationHeader","token","getEntities","environment","entity_type","entity_name_to_query","request","Request","entities","_temp3","_temp2","ok","_response$json","errorDetails","getEntitiesData","entitiesList","entitiesData","_temp6","_forOf","entity","entityId","_temp5","_temp4","data","push","getDocumentsList","document_type","document_name_to_query","encodeURIComponent","documents","_temp8","_temp7","_response$json2","getDocumentDetails","documentsList","documentDetails","_temp11","document","documentId","String","_temp10","_temp9","generateAuditInfo","documentList","audit_info","assertionFails","checkKeywordsExistence","inputValue","keywords","every","keyword","toLowerCase","includes","_settle","pact","state","value","s","_Pact","o","bind","v","onFulfilled","onRejected","this","callback","_this","_isSettledPact","thenable","array","check","_cycle","i","length"],"mappings":"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"}