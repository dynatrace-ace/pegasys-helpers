{"version":3,"file":"index.esm.js","sources":["../src/helpers/QuestionSDK.ts","../src/helpers/DTFunctions.ts"],"sourcesContent":["import { Question } from \"../types/Question\";\r\n\r\nclass QuestionSDK {\r\n  constructor() {}\r\n\r\n  createQuestion(id: string, question: string) {\r\n    let obj = {\r\n      id: id,\r\n      description: question,\r\n    } as Question;\r\n    return obj;\r\n  }\r\n}\r\nexport default QuestionSDK;\r\n","class DTFunctions {\r\n\r\n\r\n   // A boilerplate function to perform a series of operations\r\n   async performGradingPlatform(\r\n    oauth_client_id: string,\r\n    oauth_client_secret: string,\r\n    dt_account_urn: string,\r\n    oauth_sso_endpoint: string,\r\n    dt_platform_environment: string,\r\n    documentType: string,\r\n    documentName: string,\r\n    validationId: string,\r\n    maxScore: number,\r\n    getScore: (auditInfo: any) => Promise<{ score: number, assertion_fails: any[] }>\r\n  ): Promise<{ validationId: string, maxScore: number, finalScore: number, auditInfo: any }> {\r\n    // Get the authorization header\r\n    let oauth_header = null;\r\n    const dt_access_token = await this.getOauthAccessToken(oauth_client_id, oauth_client_secret, dt_account_urn, oauth_sso_endpoint);\r\n    if (!dt_access_token) {\r\n      throw new Error(\"Failed to obtain access token\");\r\n    }\r\n    oauth_header = await this.getAuthorizationHeaderPlatform(dt_access_token);\r\n\r\n    // Get documents list\r\n    const documentsList = await this.getDocumentsList(dt_platform_environment, documentType, documentName, oauth_header);\r\n\r\n    // Get document details\r\n    const documentDetails = await this.getDocumentDetails(dt_platform_environment, documentsList, oauth_header);\r\n\r\n    // Generate Audit Info\r\n    const auditInfo = await this.generateAuditInfo(documentsList, documentDetails);\r\n\r\n    // Get the score\r\n    const { score: finalScore, assertion_fails: assertionFails } = await getScore(auditInfo);\r\n    auditInfo.assertionFails = assertionFails;\r\n\r\n    return {\r\n      validationId: validationId,\r\n      maxScore: maxScore,\r\n      finalScore: finalScore,\r\n      auditInfo: auditInfo\r\n    };\r\n  }\r\n\r\n  async performGradingGen2(\r\n    oauth_client_id: string,\r\n    oauth_client_secret: string,\r\n    dt_account_urn: string,\r\n    oauth_sso_endpoint: string,\r\n    dt_platform_environment: string,\r\n    documentType: string,\r\n    documentName: string,\r\n    validationId: string,\r\n    maxScore: number,\r\n    getScore: (auditInfo: any) => Promise<{ score: number, assertion_fails: any[] }>\r\n  ): Promise<{ validationId: string, maxScore: number, finalScore: number, auditInfo: any }> {\r\n    // Get the authorization header\r\n    let oauth_header = null;\r\n    const dt_access_token = await this.getOauthAccessToken(oauth_client_id, oauth_client_secret, dt_account_urn, oauth_sso_endpoint);\r\n    if (!dt_access_token) {\r\n      throw new Error(\"Failed to obtain access token\");\r\n    }\r\n    oauth_header = await this.getAuthorizationHeaderGen2(dt_access_token);\r\n\r\n    // Get documents list\r\n    const documentsList = await this.getDocumentsList(dt_platform_environment, documentType, documentName, oauth_header);\r\n\r\n    // Get document details\r\n    const documentDetails = await this.getDocumentDetails(dt_platform_environment, documentsList, oauth_header);\r\n\r\n    // Generate Audit Info\r\n    const auditInfo = await this.generateAuditInfo(documentsList, documentDetails);\r\n\r\n    // Get the score\r\n    const { score: finalScore, assertion_fails: assertionFails } = await getScore(auditInfo);\r\n    auditInfo.assertionFails = assertionFails;\r\n\r\n    return {\r\n      validationId: validationId,\r\n      maxScore: maxScore,\r\n      finalScore: finalScore,\r\n      auditInfo: auditInfo\r\n    };\r\n  }\r\n\r\n  // A utility function to get the OAuth access token\r\n  async getOauthAccessToken(\r\n    oauth_client_id: string,\r\n    oauth_client_secret: string,\r\n    dt_account_urn: string,\r\n    oauth_sso_endpoint: string\r\n  ): Promise<string | undefined> {\r\n    const myHeaders = new Headers();\r\n    myHeaders.append(\"Content-Type\", \"application/x-www-form-urlencoded\");\r\n\r\n    const urlencoded = new URLSearchParams();\r\n    urlencoded.append(\"grant_type\", \"client_credentials\");\r\n    urlencoded.append(\"client_id\", oauth_client_id);\r\n    urlencoded.append(\"client_secret\", oauth_client_secret);\r\n    urlencoded.append(\"scope\", \"document:documents:read document:documents:write document:environment-shares:read document:direct-shares:read \");\r\n    urlencoded.append(\"resource\", dt_account_urn);\r\n\r\n    const requestOptions: RequestInit = {\r\n      method: \"POST\",\r\n      headers: myHeaders,\r\n      body: urlencoded,\r\n      redirect: \"follow\"\r\n    };\r\n\r\n    try {\r\n      const response = await fetch(oauth_sso_endpoint, requestOptions);\r\n      const result = await response.json();\r\n      return result.access_token;\r\n    } catch (error: any) {\r\n      let errorDetails;\r\n      if (error.response) {\r\n        errorDetails = await error.response.text();\r\n        console.error(\"oAuth Access Token Error:\", error.response.status, errorDetails);\r\n      } else {\r\n        console.error(\"oAuth Access Token Error:\", error.message);\r\n      }\r\n    }\r\n  }\r\n\r\n  // A utility function to get the authorization header\r\n    async getAuthorizationHeaderPlatform(token: string): Promise<Headers> {\r\n      // Create the headers object\r\n      const headers = new Headers();\r\n      // Add the authorization header\r\n      headers.append(\"Authorization\", \"Bearer \" + token);\r\n      return headers;\r\n    }\r\n  \r\n    // A utility function to get the authorization header\r\n    async  getAuthorizationHeaderGen2(token: string): Promise<Headers> {\r\n      // Create the headers object\r\n      const headers = new Headers();\r\n      // Add the authorization header\r\n      headers.append(\"Authorization\", \"Api-Token \" + token);\r\n      return headers;\r\n    }\r\n\r\n    // A utility function to get the entities list\r\n    async getEntities(environment: string, entity_type: string, entity_name_to_query: string, headers: Headers): Promise<any> {\r\n      // Get the application with the specified name\r\n      const entitySelector = `type(${entity_type}),entityName.contains(${entity_name_to_query})`;\r\n      // Create the request object\r\n      const request = new Request(`${environment}/api/v2/entities?entitySelector=${entitySelector}`, {\r\n        method: \"GET\",\r\n        headers: headers,\r\n      });\r\n  \r\n      let entities = null;\r\n      try {\r\n        const response = await fetch(request);\r\n        if (response.ok) {\r\n          entities = await response.json();\r\n        } else {\r\n          const errorDetails = await response.text();\r\n          console.error(\"Entity ID Error:\", response.status, errorDetails);\r\n        }\r\n      } catch (error) {\r\n        console.error(error);\r\n      }\r\n  \r\n      return entities;\r\n    }\r\n  \r\n    // A utility function to get the entities data\r\n    async getEntitiesData(environment: string, entitiesList: any, headers: Headers): Promise<any[]> {\r\n      if (entitiesList === null) {\r\n        return [];\r\n      }\r\n  \r\n      let entitiesData: any[] = [];\r\n      for (const entity of entitiesList.entities) {\r\n        const entityId = entity.entityId;\r\n        const request = new Request(`${environment}/api/v2/entities/${entityId}`, {\r\n          method: \"GET\",\r\n          headers: headers,\r\n        });\r\n  \r\n        try {\r\n          const response = await fetch(request);\r\n          if (response.ok) {\r\n            const data = await response.json();\r\n            entitiesData.push(data);\r\n          } else {\r\n            const errorDetails = await response.text();\r\n            console.error(\"Entity Details Error:\", response.status, errorDetails);\r\n          }\r\n        } catch (error) {\r\n          console.error(error);\r\n        }\r\n      }\r\n  \r\n      return entitiesData;\r\n    }\r\n\r\n\r\n  // A utility function to get the configs list\r\n  async getConfigsList(\r\n    environment: string,\r\n    config_endpoint: string,\r\n    config_name_to_query: string,\r\n    config_endpoint_extra_param: string,\r\n    entitiesList: any,\r\n    headers: Headers\r\n  ): Promise<any[]> {\r\n    let config_list: any[] = [];\r\n    if (config_endpoint === \"\" || !entitiesList) {\r\n      return [];\r\n    }\r\n    let parameters = \"\";\r\n    if (config_endpoint_extra_param.includes(\"/\")) {\r\n      for (const entity of entitiesList.entities) {\r\n        const entityId = entity.entityId;\r\n        parameters = \"/\" + entityId + config_endpoint_extra_param;\r\n        let result = await this.callConfigList(environment, config_endpoint, config_name_to_query, parameters, headers);\r\n        config_list.push(result);\r\n      }\r\n    } else if (config_endpoint_extra_param.includes(\"?\")) {\r\n      parameters = config_endpoint_extra_param;\r\n      let result = await this.callConfigList(environment, config_endpoint, config_name_to_query, parameters, headers);\r\n      config_list.push(result);\r\n    } else {\r\n      let result = await this.callConfigList(environment, config_endpoint, config_name_to_query, parameters, headers);\r\n      config_list.push(result);\r\n    }\r\n\r\n    return config_list;\r\n  }\r\n\r\n  // A utility function to call the config list\r\n  async callConfigList(\r\n    environment: string,\r\n    config_endpoint: string,\r\n    config_name_to_query: string,\r\n    parameters: string,\r\n    headers: Headers\r\n  ): Promise<any> {\r\n    const request = new Request(environment + config_endpoint + parameters, {\r\n      method: \"GET\",\r\n      headers: headers,\r\n    });\r\n\r\n    let configlist = [];\r\n    try {\r\n      const response = await fetch(request);\r\n      if (response.ok) {\r\n        configlist = await response.json();\r\n      } else {\r\n        const errorDetails = await response.text();\r\n        console.error(\"ConfigList Error:\", response.status, errorDetails);\r\n      }\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n    return configlist;\r\n  }\r\n  \r\n  async getConfigsData(\r\n    environment: string,\r\n    config_endpoint: string,\r\n    configList: any,\r\n    headers: Headers\r\n  ): Promise<any[]> {\r\n    if (configList === null) {\r\n      return [];\r\n    }\r\n\r\n    let configsData: any[] = [];\r\n    for (const item of configList) {\r\n      for (const key in item) {\r\n        if (key && key != null && Array.isArray(item[key])) {\r\n          for (const subItem of item[key]) {\r\n            const id = subItem ? subItem.entityId || subItem.id : null;\r\n            if (id) {\r\n              const request_details: RequestInfo = new Request(environment + config_endpoint + \"/\" + id, {\r\n                method: 'GET',\r\n                headers: headers,\r\n              });\r\n\r\n              try {\r\n                const response_details = await fetch(request_details);\r\n                if (response_details.ok) {\r\n                  const configdetails = await response_details.json();\r\n                  configsData.push(configdetails);\r\n                } else {\r\n                  const errorDetails = await response_details.text();\r\n                  console.error(\"Config Data Error:\", response_details.status, errorDetails);\r\n                }\r\n              } catch (error) {\r\n                console.error(error);\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    return configsData;\r\n  }\r\n\r\n\r\n  // A utility function to get the documents list\r\n  async getDocumentsList(environment: string, document_type: string, document_name_to_query: string, headers: Headers): Promise<any> {\r\n    const documentFilter = `name contains '${document_name_to_query}' and type == '${document_type}'`;\r\n    const request = new Request(`${environment}/platform/document/v1/documents?filter=${encodeURIComponent(documentFilter)}`, {\r\n      method: \"GET\",\r\n      headers: headers,\r\n    });\r\n\r\n    let documents = null;\r\n    try {\r\n      const response = await fetch(request);\r\n      if (response.ok) {\r\n        documents = await response.json();\r\n      } else {\r\n        const errorDetails = await response.text();\r\n        console.error(\"Document List Error:\", response.status, errorDetails);\r\n      }\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n\r\n    return documents;\r\n  }    \r\n\r\n    // A utility function to get the document details\r\n    async getDocumentDetails(environment: string, documentsList: any, headers: Headers): Promise<any[]> {\r\n      if (documentsList === null) {\r\n        return [];\r\n      }\r\n  \r\n      let documentDetails: any[] = [];\r\n      const requestOptions: RequestInit = {\r\n        method: \"GET\",\r\n        headers: headers,\r\n      };\r\n  \r\n      for (const document of documentsList.documents) {\r\n        const documentId = String(document.id);\r\n        try {\r\n          const response = await fetch(`${environment}/platform/document/v1/documents/${documentId}/content`, requestOptions);\r\n          if (response.ok) {\r\n            const result = await response.json();\r\n            documentDetails.push(result);\r\n          } else {\r\n            const errorDetails = await response.text();\r\n            console.error(\"Document Details Error:\", response.status, errorDetails);\r\n          }\r\n        } catch (error) {\r\n          console.error(error);\r\n        }\r\n      }\r\n  \r\n      return documentDetails;\r\n    }\r\n\r\n   // A utility function to generate audit info\r\n  async generateAuditInfo(documentList: any, documentDetails: any): Promise<any> {\r\n    let audit_info: any = {};\r\n\r\n    if (documentList != null) {\r\n      audit_info[\"documentList\"] = documentList;\r\n    }\r\n\r\n    if (documentDetails != null) {\r\n      audit_info[\"documentDetails\"] = documentDetails;\r\n    }\r\n\r\n    audit_info.assertionFails = [];\r\n\r\n    return audit_info;\r\n  }   \r\n\r\n\r\n    checkKeywordsExistence(inputValue: string, keywords: string[]): boolean {\r\n      return keywords.every(keyword => inputValue.toLowerCase().includes(keyword.toLowerCase()));\r\n    }\r\n\r\n}\r\n\r\n  export default DTFunctions;"],"names":["QuestionSDK","prototype","createQuestion","id","question","description","DTFunctions","_proto","performGradingPlatform","oauth_client_id","oauth_client_secret","dt_account_urn","oauth_sso_endpoint","dt_platform_environment","documentType","documentName","validationId","maxScore","getScore","_this","this","oauth_header","Promise","resolve","getOauthAccessToken","then","dt_access_token","Error","getAuthorizationHeaderPlatform","_this$getAuthorizatio","getDocumentsList","documentsList","getDocumentDetails","documentDetails","generateAuditInfo","auditInfo","_ref","finalScore","score","assertionFails","assertion_fails","e","reject","performGradingGen2","_this2","getAuthorizationHeaderGen2","_this2$getAuthorizati","_ref2","myHeaders","Headers","append","urlencoded","URLSearchParams","requestOptions","method","headers","body","redirect","_catch","fetch","response","json","result","access_token","error","_temp","text","_error$response$text","console","status","message","token","getEntities","environment","entity_type","entity_name_to_query","request","Request","entities","_temp3","_temp2","ok","_response$json","errorDetails","getEntitiesData","entitiesList","entitiesData","_temp6","_forOf","entity","entityId","_temp5","_temp4","data","push","getConfigsList","config_endpoint","config_name_to_query","config_endpoint_extra_param","_this3","config_list","parameters","_temp9","includes","_temp7","callConfigList","_temp10","configlist","_temp12","_temp11","_response$json2","getConfigsData","configList","configsData","_temp16","item","target","keys","key","_forTo","i","Array","isArray","subItem","_temp15","request_details","_temp14","response_details","_temp13","configdetails","_forIn","document_type","document_name_to_query","encodeURIComponent","documents","_temp18","_temp17","_response$json3","_temp21","document","documentId","String","_temp20","_temp19","documentList","audit_info","checkKeywordsExistence","inputValue","keywords","every","keyword","toLowerCase","_iteratorSymbol","Symbol","iterator","pact","state","value","s","_Pact","o","_settle","bind","v","observer","onFulfilled","onRejected","callback","thenable","check","array","length","_isSettledPact","_cycle","step","next","done","_fixup","TypeError","values"],"mappings":"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"}